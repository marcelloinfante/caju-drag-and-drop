name: CI/CD Pipeline

on:
  push:
    branches: ["main"]

  pull_request:
    branches: ["main"]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: caju

  ECS_CLUSTER_FRONT_END: caju-front
  ECS_SERVICE_FRONT_END: caju-front
  ECS_TASK_DEFINITION_FRONT_END: caju-front

  ECS_CLUSTER_BACK_END: caju-back
  ECS_SERVICE_BACK_END: caju-back
  ECS_TASK_DEFINITION_BACK_END: caju-back

  CONTAINER_NAME: caju-container

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build docker image
        run: docker build . -t caju:latest

      - name: Run tests
        run: docker run caju:latest yarn jest

      - name: Run linter
        run: docker run caju:latest yarn lint

  deploy-front-end:
    name: Deploy Front-end
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION_FRONT_END }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE_FRONT_END }}
          cluster: ${{ env.ECS_CLUSTER_FRONT_END }}
          wait-for-service-stability: true
